name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:
- stage: Create
  jobs:
  - job: Create
    steps:
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2m8YGXgcD2ihrEjMqmJGtl1sfQP/TjOQiKjr2GFPmxizJWDIoriU9ss+tPkbv3qyU0v0FYG65ZOLusvQNwuy6OpCsPDm4k+Oc7FUxScrjtLDANvC3BADh6iA07eJccb3SI7n8How7+qGL1+N7Zp3hrLLpRRS4xyUHLoeZNWilN4/EB++KCpaGsTOtUa5yVhinTZqmZplI+2gxa3IBhhfCS6mzGigVQfAORy+AooG2uFY6m+nFBf8B+5Hu/xc7VITqmqUi/izSmv5HyRWk0jsYikxx0gOytKjP6rsWbrswr6vZxmM1Go0Deiwra0mZAv/CDNvjb+D8K5jCCAKyMGagavuisCK0gwA+I7eQ68h+WuLldSSIwMXTgu3FwOJNzZKLzahdc/QzCjRV+gD3jAT/UeN9VnRGjwoQSIegndMNQyB7W8mnT0XSfiIdbOgV03SDDV33cX0gR3u9HOKPOOB0SCIlRWj8DFDhTKp0/gkOBKElFZwzTUpXVilUVx4RSiAxk0ITesYJupagS/izVmCWi4Z3TPpqKA0bBpyweVzTGs56lvkEs21UywA0G1xzDMee+40MbEQVm38dAVTGxoWZ1KE6BZU5GdVPG2UIOAjnwRo+PzUSjxWwqRtFynV32VXIAVbhYh6d3VPnMWRAHNvA5KkPkAZjCPZR06vU0BwTCQ== t@cc-3cd0a9b8-6465695bbc-ttpxx'
        sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2m8YGXgcD2ihrEjMqmJGtl1sfQP/TjOQiKjr2GFPmxizJWDIoriU9ss+tPkbv3qyU0v0FYG65ZOLusvQNwuy6OpCsPDm4k+Oc7FUxScrjtLDANvC3BADh6iA07eJccb3SI7n8How7+qGL1+N7Zp3hrLLpRRS4xyUHLoeZNWilN4/EB++KCpaGsTOtUa5yVhinTZqmZplI+2gxa3IBhhfCS6mzGigVQfAORy+AooG2uFY6m+nFBf8B+5Hu/xc7VITqmqUi/izSmv5HyRWk0jsYikxx0gOytKjP6rsWbrswr6vZxmM1Go0Deiwra0mZAv/CDNvjb+D8K5jCCAKyMGagavuisCK0gwA+I7eQ68h+WuLldSSIwMXTgu3FwOJNzZKLzahdc/QzCjRV+gD3jAT/UeN9VnRGjwoQSIegndMNQyB7W8mnT0XSfiIdbOgV03SDDV33cX0gR3u9HOKPOOB0SCIlRWj8DFDhTKp0/gkOBKElFZwzTUpXVilUVx4RSiAxk0ITesYJupagS/izVmCWi4Z3TPpqKA0bBpyweVzTGs56lvkEs21UywA0G1xzDMee+40MbEQVm38dAVTGxoWZ1KE6BZU5GdVPG2UIOAjnwRo+PzUSjxWwqRtFynV32VXIAVbhYh6d3VPnMWRAHNvA5KkPkAZjCPZR06vU0BwTCQ== t@cc-3cd0a9b8-6465695bbc-ttpxx'
        sshKeySecureFile: 'id_rsa'
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '0.14.8'
    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'bobby-svcconn'
        backendAzureRmResourceGroupName: 'tfstate'
        backendAzureRmStorageAccountName: 'tfstate294'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'key1'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      
    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'bobby-svcconn'
      
    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'bobby-svcconn'
      
    - task: TerraformTaskV1@0
      displayName: Terraform Apply
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: |
          -auto-approve
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'bobby-svcconn'


- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: "$(System.DefaultWorkingDirectory)/automatedtesting/selenium"
        includeRootFolder: false
        archiveType: "zip"
        archiveFile: '$(Build.BuildId)/selenium-tests.zip'
        replaceExistingArchive: true
    - upload: $(Build.BuildId)/selenium-tests.zip
      artifact: selenium

- stage: Deploy
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'ubuntu-18.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'bobby-svcconn'
              appName: 'bobby-AppService'
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
              deploymentMethod: 'auto'

  - deployment: VMDeploy
    environment:
      name:  bobbymvm
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                #! /bin/bash
                
                pwd
                echo "Package updates..."
                sudo add-apt-repository universe -y
                sudo apt-get update -y
                sudo apt-get install python3-pip -y
                sudo apt-get upgrade -y
                sudo apt-get install unzip -y
                sudo apt-get install -y chromium-browser
                pip3 install selenium -y
                
                pwd
                echo "Chrome driver..."
                wget https://chromedriver.storage.googleapis.com/89.0.4389.23/chromedriver_linux64.zip
                unzip chromedriver_linux64.zip
                sudo mv chromedriver /usr/bin/chromedriver
                sudo chown root:root /usr/bin/chromedriver
                sudo chmod +x /usr/bin/chromedriver
                chromium-browser -version
                chromedriver --version

                pwd
                echo "Log analytics agent..."
                wget https://raw.githubusercontent.com/Microsoft/OMS-Agent-for-Linux/master/installer/scripts/onboard_agent.sh && sh onboard_agent.sh -w dbf2bd83-6d47-436b-a499-a2b566def8fe -s MuSR8Ti5MMi0E+9+1NM4NxCxFqJcfLzuGD0EtGhjXo3Vhy/THcSdCf1WyQnkXafD+6DiFjiOAEfJiQh6EbZVeg== -d opinsights.azure.com

          - download: current
            artifact: selenium
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                unzip -o $(Pipeline.Workspace)/selenium/selenium-tests.zip -d .
                sudo mkdir /var/logs
                python3 uitests.py > ui-logs.log
                sudo mv ui-logs.log /var/logs